# Bitprim
#
# Copyright (c) 2017 Bitprim developers (see AUTHORS)
# Distributed under the Boost Software License, Version 1.0. (See accompanying
# file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)

language: cpp
git:
  submodules: false

matrix:
  include:
    - env: GCC_VERSION=6 CXX_FLAGS="-std=c++11" BUILD_TYPE=Release
      os: linux
      sudo: required
      dist: trusty
      group: edge
      cache:
#        ccache: true
#        timeout: 1000
#        directories:
#          - $HOME/deps
      addons: &gcc6
        apt:
          packages:
            #- cmake
            - g++-6
            - libc6
          sources:
            - ubuntu-toolchain-r-test
branches:
  only:
    - master

before_install:

  # Update submodules
  - git submodule update --init --recursive

  - if [ -n "$GCC_VERSION" ]; then export CXX="g++-${GCC_VERSION}" CC="gcc-${GCC_VERSION}"; fi
  - if [ -n "$CLANG_VERSION" ]; then export CXX="clang++-${CLANG_VERSION}" CC="clang-${CLANG_VERSION}"; fi
  - if [ -n "$GCC_VERSION" ]; then export CXX_FLAGS="${CXX_FLAGS} "; fi
  - if [ -n "$CLANG_VERSION" ]; then export CXX_FLAGS="${CXX_FLAGS} "; fi

install:
  ############################################################################
  # All the dependencies are installed in /home/travis/deps/
  ############################################################################
  - DEPS_DIR="/home/travis/deps"
  - mkdir ${DEPS_DIR} && cd ${DEPS_DIR}

  ############################################################################
  # Install a recent CMake
  ############################################################################
  #- |
   # if [ ! -d "$HOME/deps/cmake/bin" ]; then
   #   uname -a
   #   cmake --version
  - CMAKE_URL="https://cmake.org/files/v3.9/cmake-3.9.0-rc5-Linux-x86_64.tar.gz"
  - mkdir cmake && travis_retry wget --no-check-certificate --quiet -O - ${CMAKE_URL} | tar --strip-components=1 -xz -C cmake
  - echo 'Cmake 3.9.0 installed';
    #else
    #  echo 'Cmake 3.9.0 already installed';
    #fi
    
  - export PATH=${DEPS_DIR}/cmake/bin:${PATH}
  ############################################################################
  # Install a Boost with -fPIC
  ############################################################################
  - cd ${DEPS_DIR}
  - wget -O boost_1_64_0.tar.gz https://sourceforge.net/projects/boost/files/boost/1.64.0/boost_1_64_0.tar.gz/download
  - tar -xzf boost_1_64_0.tar.gz
  - cd boost_1_64_0
  - wget -O boost_bin_fpic.tar.bz2 http://repo.bitprim.org/packages/binary/boost_bin_fpic.tar.bz2
  - tar -xvjf boost_bin_fpic.tar.bz2
  - export BOOST_OPTS="-DBOOST_ROOT=/home/travis/deps/boost_1_64_0 -DBOOST_INCLUDEDIR=/home/travis/deps/boost_1_64_0 -DBOOST_LIBRARYDIR=/home/travis/deps/boost_1_64_0/lib"
  - sudo ldconfig
  - echo 'Boost 1.64.0 installed';
  
  ############################################################################
  # Install ZMQ
  ############################################################################
  - cd ${DEPS_DIR}
  - wget -O libzmq.tar.gz http://repo.bitprim.org/packages/binary/libzmq.tar.gz
  - tar -xvzf libzmq.tar.gz
  - export ZEROMQ=" -DZeroMQ_ROOT_DIR=/home/travis/deps/libzmq "  
  - sudo ldconfig
  - echo 'ZeroMQ 4.2 installed';

  ############################################################################
  # Install Protobuf
  ############################################################################
  - cd ${DEPS_DIR}
  - wget -O protobuf.tar.gz http://repo.bitprim.org/packages/binary/protobuf.tar.gz
  - tar -xvzf protobuf.tar.gz
#  - export Protobuf_ROOT_DIR="/home/travis/deps/protobuf"
#  - export Protobuf_INCLUDE_DIR="/home/travis/deps/protobuf/include"
#  - export Protobuf_LIBRARY="/home/travis/protobuf/deps/lib"
#  - export Protobuf_PROTOC_EXECUTABLE="/home/travis/deps/protobuf/bin"
  - export PROTOBUF=" -DProtobuf_ROOT_DIR=/home/travis/deps/protobuf "
#  - export PATH=/home/travis/protobuf/deps/bin:${PATH}
  - sudo ldconfig
  - echo 'Protobuf installed';  


before_script:
  ############################################################################
  # Set the git identity (for pushing the documentation and the benchmarks)
  ############################################################################
  - git config --global user.name "Travis bot"
  - git config --global user.email travis-bot@travis-ci.org

  - if [ -n "$GCC_VERSION" ]; then export CXX_FLAGS="${CXX_FLAGS} "; fi
  - if [ -n "$CLANG_VERSION" ]; then export CXX_FLAGS="${CXX_FLAGS} "; fi

  - cd ${TRAVIS_BUILD_DIR}

  - |
    function build_project
    {
    cd $1
    mkdir build
    cd build
    cmake .. -G "Unix Makefiles" -DCMAKE_CXX_FLAGS="${CXX_FLAGS}" ${BOOST_OPTS} ${PROTOBUF} ${ZEROMQ} -DENABLE_TESTS=OFF -DWITH_EXAMPLES=OFF -DWITH_REMOTE_DATABASE=OFF -DWITH_REMOTE_BLOCKCHAIN=OFF -DWITH_LITECOIN=OFF -DWITH_TESTS=OFF -DENABLE_MODULE_RECOVERY=ON -DWITH_TOOLS=OFF -DCMAKE_BUILD_TYPE=Debug 
    make -j4
    cd ..
    cd ..
    }
    
    
script:
  - git clone --recursive https://github.com/bitprim/bitprim-build/
  - cd bitprim-build
  - mkdir build
  - cd build
  - cmake .. -DCMAKE_CXX_FLAGS="${CXX_FLAGS}" ${BOOST_OPTS} ${PROTOBUF} ${ZEROMQ}
  - make -j 4
  - sudo make install

notifications:
  email: false
  webhooks:
#    urls: https://webhooks.gitter.im/e/a19dd2b03bf676d2b622
    on_success: change
    on_failure: always
