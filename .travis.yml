# Bitprim
#
# Copyright (c) 2017 Bitprim developers (see AUTHORS)
# Distributed under the Boost Software License, Version 1.0. (See accompanying
# file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)

language: cpp
git:
  submodules: false
  
matrix:
  include:
    - env: GCC_VERSION=5 CXX_FLAGS="-std=c++11" BUILD_TYPE=Release
      os: linux
      sudo: required
      dist: trusty
      cache:
        ccache: true
        timeout: 1000
        directories:
          - $HOME/deps
      addons: &gcc5
        apt:
          packages:
            #- cmake
            - g++-5
          sources:
            - ubuntu-toolchain-r-test
branches:
  only:
    - master

before_install:

  # Update submodules 
  - git submodule update --init --recursive
  
  - if [ -n "$GCC_VERSION" ]; then export CXX="g++-${GCC_VERSION}" CC="gcc-${GCC_VERSION}"; fi
  - if [ -n "$CLANG_VERSION" ]; then export CXX="clang++-${CLANG_VERSION}" CC="clang-${CLANG_VERSION}"; fi
  - if [ -n "$GCC_VERSION" ]; then export CXX_FLAGS="${CXX_FLAGS} "; fi
  - if [ -n "$CLANG_VERSION" ]; then export CXX_FLAGS="${CXX_FLAGS} "; fi

install:
  ############################################################################
  # All the dependencies are installed in /home/travis/deps/
  ############################################################################
  - DEPS_DIR="/home/travis/deps"
  - mkdir ${DEPS_DIR} && cd ${DEPS_DIR}

  ############################################################################
  # Install a recent CMake
  ############################################################################
  - |
    if [ ! -d "$HOME/deps/cmake/bin" ]; then
      uname -a
      cmake --version
      CMAKE_URL="https://cmake.org/files/v3.7/cmake-3.7.0-rc3-Linux-x86_64.tar.gz"
      mkdir cmake && travis_retry wget --no-check-certificate --quiet -O - ${CMAKE_URL} | tar --strip-components=1 -xz -C cmake
      export PATH=${DEPS_DIR}/cmake/bin:${PATH}
      echo 'Cmake 3.7.0 installed';
    else
      echo 'Cmake 3.7.0 already installed';
    fi  
  ############################################################################
  # Install a Boost with -fPIC
  ############################################################################
  - |
    if [ ! -d "$HOME/boost/lib" ]; then
    	wget -O boost.tar.gz https://sourceforge.net/projects/boost/files/boost/1.61.0/boost_1_61_0.tar.gz/download
	    tar -xzf boost.tar.gz
	    cd boost_1_61_0
	    ./bootstrap.sh --prefix=$HOME/boost
      ./b2  cxxflags=-fPIC cflags=-fPIC
	    cd ..
	    echo 'Boost 1.61.0 installed';
    else
	    echo 'Boost 1.61.0 already installed';
    fi

  -  export BOOST_OPTS="-DBOOST_ROOT=/home/travis/boost -DBOOST_INCLUDEDIR=/home/travis/boost/include -DBOOST_LIBRARYDIR=/home/travis/boost/lib"    
  -  sudo ldconfig

before_script:
  ############################################################################
  # Set the git identity (for pushing the documentation and the benchmarks)
  ############################################################################
  - git config --global user.name "Travis bot"
  - git config --global user.email travis-bot@travis-ci.org

  - if [ -n "$GCC_VERSION" ]; then export CXX_FLAGS="${CXX_FLAGS} "; fi
  - if [ -n "$CLANG_VERSION" ]; then export CXX_FLAGS="${CXX_FLAGS} "; fi

  - cd ${TRAVIS_BUILD_DIR}

  - git clone 'https://github.com/bitprim/secp256k1' -b c-api
  - git clone 'https://github.com/bitprim/bitprim-core' -b c-api
  - git clone 'https://github.com/bitprim/bitprim-network' -b c-api
  - git clone 'https://github.com/bitprim/bitprim-consensus' -b c-api
  - git clone 'https://github.com/bitprim/bitprim-database' -b c-api
  - git clone 'https://github.com/bitprim/bitprim-blockchain' -b c-api
  - git clone 'https://github.com/bitprim/bitprim-node' -b c-api
  - git clone 'https://github.com/bitprim/bitprim-node-cint' 

  - |
    function build_project
	  {
		  cd $1
		  mkdir build
		  cd build
	    cmake .. -G "Unix Makefiles" -DCMAKE_CXX_FLAGS="${CXX_FLAGS}" ${BOOST_OPTS} -DENABLE_TESTS=OFF -DWITH_EXAMPLES=OFF -DWITH_REMOTE_DATABASE=OFF -DWITH_REMOTE_BLOCKCHAIN=OFF -DWITH_LITECOIN=OFF -DWITH_TESTS=OFF -DENABLE_MODULE_RECOVERY=ON -DWITH_TOOLS=OFF -DCMAKE_BUILD_TYPE=Debug $2 $3 $4 $5 $6 $7 $8 
		  make -j4
	 	  cd ..
	 	  cd ..
	  }

script:
  - master="${TRAVIS_BUILD_DIR}"
  - Dblockchain=" -Dbitprim-blockchain_DIR=$master/bitprim-blockchain/build/ "
  - Dconsensus=" -Dbitprim-consensus_DIR=$master/bitprim-consensus/build/ "
  - Dcore=" -Dbitprim-core_DIR=$master/bitprim-core/build/ "
  - Dnetwork=" -Dbitprim-network_DIR=$master/bitprim-network/build/ "
  - Dsecp=" -Dsecp256k1_DIR=$master/secp256k1/build/ "
  - Ddatabase=" -Dbitprim-database_DIR=$master/bitprim-database/build "
  - Dnode=" -Dbitprim-node_DIR=$master/bitprim-node/build/ "
  - Ddatabase=" -Dbitprim-database_DIR=$master/bitprim-database/build "

  - build_project secp256k1 $Dblockchain $Dconsensus $Dcore $Dnetwork $Dsecp $Ddatabase 
  - build_project bitprim-core $Dblockchain $Dconsensus $Dcore $Dnetwork $Dsecp $Ddatabase 
  - build_project bitprim-network $Dblockchain $Dconsensus $Dcore $Dnetwork $Dsecp $Ddatabase 
  - build_project bitprim-consensus $Dblockchain $Dconsensus $Dcore $Dnetwork $Dsecp $Ddatabase 
  - build_project bitprim-database $Dblockchain $Dconsensus $Dcore $Dnetwork $Dsecp $Ddatabase 
  - build_project bitprim-blockchain $Dblockchain $Dconsensus $Dcore $Dnetwork $Dsecp $Ddatabase 
  - build_project bitprim-node $Dblockchain $Dconsensus $Dcore $Dnetwork $Dsecp $Ddatabase 
  - build_project bitprim-node-cint $Dblockchain $Dconsensus $Dcore $Dnetwork $Dsecp $Ddatabase $Dnode

notifications:
  email: false
  webhooks:
#    urls: https://webhooks.gitter.im/e/a19dd2b03bf676d2b622
    on_success: change
    on_failure: always
